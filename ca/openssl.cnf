[ default ]
name              = root-rsa
domain_suffix     = localhost
aia_url           = http://crt.localhost:$ENV::TLSMATE_CA_PORT/certs/$ENV::CA_NAME.crt
crl_url           = http://crl.localhost:$ENV::TLSMATE_CA_PORT/crl/$ENV::CA_NAME.crl
ocsp_url          = http://ocsp.localhost:$ENV::OCSP_PORT
default_ca        = $ENV::CA_NAME
name_opt          = utf8,esc_ctrl,multiline,lname,align
distinguished_name = req_distinguished_name
dir               = .
private_key       = $dir/private/$ENV::CA_NAME.key
certificate       = $dir/certs/$ENV::CA_NAME.pem
new_certs_dir     = $dir/certs/openssl
db                = $dir/db/$ENV::CA_NAME
database          = $db/index
serial            = $db/serial
default_md        = sha256
policy            = policy_c_o_match
default_days      = 3650
default_crl_days  = 3650

[ req ]
prompt			= no

[ req_distinguished_name ]
countryName                     = DE
organizationName                = The TlsMate Company
commonName                      = BlaBla

[ policy_c_o_match ]
countryName             = match
stateOrProvinceName     = optional
organizationName        = optional
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional

[ root_ext ]
basicConstraints        = critical, CA:true
keyUsage                = critical, keyCertSign, cRLSign
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid:always

[ ca_ext ]
basicConstraints        = critical, CA:true, pathlen:0
keyUsage                = critical, keyCertSign, cRLSign
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid:always
authorityInfoAccess     = @issuer_info
crlDistributionPoints   = @crl_info
nameConstraints         = critical, @name_constraints
tlsfeature              = status_request, status_request_v2
# domain validated (we can get away with this for demo purposes since we only issue certs for .localhost)
# required by baseline requirements but could be considered as optional as private scope
# also optional in recent NIST TLS guideline DRAFT v2
#certificatePolicies	= 2.23.140.1.2.1

[ client_ext ]
basicConstraints        = critical,CA:FALSE
keyUsage                = critical, digitalSignature
extendedKeyUsage        = clientAuth
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid:always

[ server_ext ]
basicConstraints        = critical,CA:FALSE
subjectAltName          = @alt_names
extendedKeyUsage        = serverAuth
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid:always
authorityInfoAccess     = @issuer_info
crlDistributionPoints   = @crl_info
certificatePolicies	= 2.23.140.1.2.1
tlsfeature              = status_request, status_request_v2

[ server_ext_no_ids ]
# Server certificate without subjectKeyIdentifier and without authorityKeyIdentifier
basicConstraints        = critical,CA:FALSE
subjectAltName          = @alt_names
extendedKeyUsage        = serverAuth
authorityInfoAccess     = @issuer_info
crlDistributionPoints   = @crl_info
certificatePolicies	= 2.23.140.1.2.1
tlsfeature              = status_request, status_request_v2

[ alt_names ]
DNS.1 = test.localhost
DNS.2 = *.wildcard.localhost

[ crl_info ]
URI.0                   = $crl_url

[ issuer_info ]
caIssuers;URI.0         = $aia_url
OCSP;URI.0              = $ocsp_url

[ name_constraints ]
permitted;DNS.0=.localhost
excluded;IP.0=0.0.0.0/0.0.0.0
excluded;IP.1=0:0:0:0:0:0:0:0/0:0:0:0:0:0:0:0

[ ocsp_ext ]
basicConstraints 	= critical, CA:FALSE
keyUsage 		= critical, digitalSignature
extendedKeyUsage 	= OCSPSigning
subjectKeyIdentifier 	= hash
authorityKeyIdentifier 	= keyid:always
noCheck          	= yes
certificatePolicies	= 2.23.140.1.2.1

